name: ci

on: push

jobs:
  docker:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.get_version.outputs.sha_short }}
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get the version
        id: get_version
        run: |
          v="${GITHUB_REF##*/}"
          if [[ "$v" == "master" ]]; then
            echo ::set-output name=VERSION::latest
          else
            echo ::set-output name=VERSION::${v}
          fi
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile
          tags: sebuild/v2ray:${{ steps.get_version.outputs.VERSION }}

      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  release:
    needs: [docker]
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Move artifact to host
        id: docker_move
        run: |
          mkdir v2ray
          docker create --name v2ray-container sebuild/v2ray:${{ needs.docker.outputs.VERSION }} sh
          docker cp v2ray-container:/usr/bin/v2ray ./v2ray
          docker rm -f v2ray-container

      - name: Pack up artifact
        id: package
        run: tar -czvf v2ray.tar.gz ./v2ray

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.docker.outputs.sha_short }}
          release_name: Release ${{ needs.docker.outputs.sha_short }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: v2ray.tar.gz
          asset_name: v2ray.tar.gz
          asset_content_type: application/gzip

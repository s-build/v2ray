name: ci

on: [push, release]

jobs:
  docker-build-and-push:
    runs-on: ubuntu-20.04
    env:
      GOOS_GOARCHS: darwin-amd64 linux-amd64 linux-arm64
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get the version
        id: get_version
        run: |
          v="${GITHUB_REF##*/}"
          if [[ "$v" == "master" ]]; then
            echo ::set-output name=VERSION::latest
          else
            echo ::set-output name=VERSION::${v}
          fi

      - name: Compile v2ray
        id: compile_v2ray
        uses: docker/build-push-action@v2
        with:
          file: DockerfileBuilder
          tags: builder:ED0C6428
          build-args: GOOS_GOARCHS=${{ env.GOOS_GOARCHS }}

      - name: Copy from builder and build v2ray for amd64 linux
        id: build_image
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          tags: sebuild/v2ray:${{ steps.get_version.outputs.VERSION }}

      - name: Look up images
        run: docker image ls

      - name: Push image
        run: docker push sebuild/v2ray:${{ steps.get_version.outputs.VERSION }}

      - name: docker Builder Digest
        run: echo ${{ steps.compile_v2ray.outputs.digest }}

      - name: docker push Digest
        run: echo ${{ steps.build_image.outputs.digest }}

      - name: Move artifact to host and pack up artifact
        if: startsWith(github.ref, 'refs/tags')
        run: |
          docker create --name v2ray-container builder:ED0C6428 sh
          while IFS=' ' read -r GOOS_GOARCH; do
              mkdir v2ray-${GOOS_GOARCH}
              docker cp v2ray-container:/v2ray-${GOOS_GOARCH} ./v2ray-${GOOS_GOARCH}
              tar -czvf v2ray-${GOOS_GOARCH}.tar.gz ./v2ray-${GOOS_GOARCH}
          done <<< ${{ env.GOOS_GOARCHS }}
          docker rm -f v2ray-container

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload all assets
        if: startsWith(github.ref, 'refs/tags')
        run: |
          set -x
          assets=()
          for asset in ./*.tar.gz; do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
